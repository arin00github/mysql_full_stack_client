import Head from "next/head";
import React, { useEffect, useState } from "react";
import Axios from "axios";
import { useRouter } from "next/router";

import { Button, Form, FormCheck } from "react-bootstrap";
import { wrapper } from "../../redux/store";

import { useSelector } from "react-redux";

export default function Page01({ props }) {
  //const getUser = useSelector(selectUser);
  //console.log("getUser", getUser.userArray);
  const router = useRouter();
  const [form, setForm] = useState({
    name: "",
    email: "",
    active: false,
    role: "user",
  });

  const handleChange = (e) => {
    setForm({
      ...form,
      [e.target.name]: e.target.value,
    });
  };

  const handleCheck = (e) => {
    setForm({
      ...form,
      active: e.target.value,
    });
  };
  console.log(form);

  const addData = async (e) => {
    e.preventDefault();
    const { name, email, role, active } = form;

    const result = await Axios(`http://localhost:4200/api/data/add`, {
      //axios는 무조건 풀로 주소를 넣어야 한다.
      method: "POST",
      data: {
        name: name,
        email: email,
        role: role,
        active: active,
      },
      headers: {
        "Content-Type": "application/json",
      },
    })
      .then((res) => {
        console.log(res.config);
      })
      .catch((err) => {
        console.log(err);
        router.push({ pathname: "/404", query: { message: err } });
      });
  };

  const handleDelete = async (e: any, userid: string) => {
    e.preventDefault();
    await Axios(`http://localhost:4200/api/data/delete`, {
      //axios는 무조건 풀로 주소를 넣어야 한다.
      method: "DELETE",
      data: {
        user_id: userid,
      },
      headers: {
        "Content-Type": "application/json",
      },
    });
  };

  // useEffect(() => {
  //   readData();
  // }, []);

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="container">
        <div>page02</div>
        <form onSubmit={addData} method="POST" style={{ width: "400px" }}>
          <input
            name="user_id"
            placeholder="user_id"
            onChange={handleChange}
            //id="user_id"
          />
          <input
            name="user_name"
            placeholder="user_name"
            onChange={handleChange}
            //id="user_name"
          />
          <input type="submit" value="add" className="btn btn-primary" />
        </form>
        <Form>
          <Form.Group controlId="name">
            <Form.Label>name</Form.Label>
            <Form.Control name="name" onChange={handleChange} />
          </Form.Group>
          <Form.Group controlId="email">
            <Form.Label>email</Form.Label>
            <Form.Control name="email" onChange={handleChange} />
          </Form.Group>
          <Form.Group controlId="active">
            <Form.Label>active</Form.Label>
            <FormCheck
              type="radio"
              label="active"
              value="active"
              onChange={handleCheck}
              name="active"
            />
            <FormCheck
              type="radio"
              label="inactive"
              value="inactive"
              onChange={handleCheck}
              name="active"
            />
          </Form.Group>
          <Form.Group controlId="role">
            <Form.Label>role</Form.Label>
            <FormCheck
              type="radio"
              label="user"
              value="user"
              onChange={handleChange}
              name="role"
            />
            <FormCheck
              type="radio"
              label="partner"
              value="partner"
              onChange={handleChange}
              name="role"
            />
            <FormCheck
              type="radio"
              label="manager"
              value="manager"
              onChange={handleChange}
              name="role"
            />
          </Form.Group>
        </Form>
        <div>
          <button>click</button>
        </div>
      </div>
    </div>
  );
}

// export const getStaticProps = wrapper.getStaticProps(async (context) => {
//   const rslt = await Axios(`http://localhost:4200/api/data/read`, {
//     method: "GET",
//   });
//   context.store.dispatch(UserSuccess(rslt.data));
// });
